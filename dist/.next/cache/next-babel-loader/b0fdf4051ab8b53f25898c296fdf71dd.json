{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\nimport styled, { css } from \"styled-components\";\nconst StyledText = styled.p.withConfig({\n  displayName: \"textcomponent__StyledText\",\n  componentId: \"fgpnpr-0\"\n})(({\n  theme,\n  variant,\n  display,\n  align,\n  gutterBottom,\n  noWrap,\n  color\n}) => css([\"word-break:break-word;\", \" \", \" \", \";\", \" \", \" \", \"\"], align && css([\"text-align:\", \";\"], align), display && css([\"display:\", \";\"], display), theme.typography[variant || \"body\"], color && css([\"color:\", \";\"], theme.colors[color]), gutterBottom && css([\"margin-bottom:0.8em;\"]), noWrap && css([\"white-space:nowrap;overflow:hidden;text-overflow:ellipsis;\"])));\nexport const Text = (_ref) => {\n  let {\n    children,\n    component\n  } = _ref,\n      otherProps = _objectWithoutProperties(_ref, [\"children\", \"component\"]);\n\n  return __jsx(StyledText, _extends({\n    as: component\n  }, otherProps), children);\n};","map":null,"metadata":{},"sourceType":"module"}
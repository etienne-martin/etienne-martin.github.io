{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/emartin/DEV/etienne-martin.github.io/src/catalog/text/text.component.tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport styled, { css } from \"styled-components\";\nconst StyledText = styled.p.withConfig({\n  displayName: \"textcomponent__StyledText\",\n  componentId: \"fgpnpr-0\"\n})(({\n  theme,\n  variant,\n  display,\n  align,\n  gutterBottom,\n  noWrap,\n  color\n}) => css([\"word-break:break-word;\", \" \", \" \", \";\", \" \", \" \", \"\"], align && css([\"text-align:\", \";\"], align), display && css([\"display:\", \";\"], display), theme.typography[variant || \"body\"], color && css([\"color:\", \";\"], theme.colors[color]), gutterBottom && css([\"margin-bottom:0.8em;\"]), noWrap && css([\"white-space:nowrap;overflow:hidden;text-overflow:ellipsis;\"])));\nexport const Text = (_ref) => {\n  let {\n    children,\n    component\n  } = _ref,\n      otherProps = _objectWithoutProperties(_ref, [\"children\", \"component\"]);\n\n  return __jsx(StyledText, _extends({\n    as: component\n  }, otherProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), children);\n};","map":{"version":3,"sources":["/Users/emartin/DEV/etienne-martin.github.io/src/catalog/text/text.component.tsx"],"names":["React","styled","css","StyledText","p","theme","variant","display","align","gutterBottom","noWrap","color","typography","colors","Text","children","component","otherProps"],"mappings":";;;;AAAA,OAAOA,KAAP,MAA0B,OAA1B;AACA,OAAOC,MAAP,IAAiBC,GAAjB,QAA4B,mBAA5B;AAmBA,MAAMC,UAAU,GAAGF,MAAM,CAACG,CAAV;AAAA;AAAA;AAAA,GACd,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,OAAT;AAAkBC,EAAAA,OAAlB;AAA2BC,EAAAA,KAA3B;AAAkCC,EAAAA,YAAlC;AAAgDC,EAAAA,MAAhD;AAAwDC,EAAAA;AAAxD,CAAD,KAAqET,GAArE,0DAGIM,KAAK,IACLN,GADK,uBAEWM,KAFX,CAHT,EAQID,OAAO,IACPL,GADO,oBAEMK,OAFN,CARX,EAaIF,KAAK,CAACO,UAAN,CAAiBN,OAAO,IAAI,MAA5B,CAbJ,EAeIK,KAAK,IACLT,GADK,kBAEMG,KAAK,CAACQ,MAAN,CAAaF,KAAb,CAFN,CAfT,EAoBIF,YAAY,IACZP,GADY,0BApBhB,EAyBIQ,MAAM,IACNR,GADM,gEAzBV,CADc,CAAhB;AAmCA,OAAO,MAAMY,IAAmB,GAAG,UAA4C;AAAA,MAA3C;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,GAA2C;AAAA,MAAjBC,UAAiB;;AAC7E,SACE,MAAC,UAAD;AAAY,IAAA,EAAE,EAAED;AAAhB,KAA+BC,UAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACGF,QADH,CADF;AAKD,CANM","sourcesContent":["import React, { FC } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport { theme } from \"../../styles/theme\";\n\n/**\n * Using the \"component\" props instead of the \"as\" prop\n * because of a bug with styled-components\n * https://github.com/artsy/palette/pull/327\n * https://github.com/styled-components/styled-components/issues/2448\n */\nexport interface TextProps {\n  component: keyof JSX.IntrinsicElements | React.ComponentType<any>;\n  variant?: keyof typeof theme.typography;\n  display?: \"inline\" | \"block\";\n  align?: \"left\" | \"center\" | \"right\" | \"justify\";\n  gutterBottom?: boolean;\n  noWrap?: boolean;\n  color?: keyof typeof theme.colors;\n}\n\nconst StyledText = styled.p<Omit<TextProps, \"component\">>(\n  ({ theme, variant, display, align, gutterBottom, noWrap, color }) => css`\n    word-break: break-word;\n\n    ${align &&\n      css`\n        text-align: ${align};\n      `}\n    \n    ${display &&\n      css`\n        display: ${display};\n      `}\n\n    ${theme.typography[variant || \"body\"]};\n\n    ${color &&\n      css`\n        color: ${theme.colors[color]};\n      `}\n\n    ${gutterBottom &&\n      css`\n        margin-bottom: 0.8em;\n      `}\n\n    ${noWrap &&\n      css`\n        white-space: nowrap;\n        overflow: hidden;\n        text-overflow: ellipsis;\n      `}\n  `\n);\n\nexport const Text: FC<TextProps> = ({ children, component, ...otherProps }) => {\n  return (\n    <StyledText as={component} {...otherProps}>\n      {children}\n    </StyledText>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}